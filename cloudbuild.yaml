steps:
  ############################
  # question service
  ############################
  # Build the question-service
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/question-service:$COMMIT_SHA"
      - "-f"
      - "./question_service/Dockerfile.prod"
      - "./question_service"

  # Push the image
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/question-service:$COMMIT_SHA"

  # Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "question-service"
      - "--image"
      - "gcr.io/$PROJECT_ID/question-service:$COMMIT_SHA"
      - "--region"
      - "us-west2"
      - "--platform"
      - "managed"
      - "--port"
      - "8080"
      - "--allow-unauthenticated"
      - "--set-secrets"
      - "MONGODB_URI=MONGODB_URI:latest"

  ############################
  # end question service
  ############################

  ############################
  # user service
  ############################
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/user-service:$COMMIT_SHA"
      - "-f"
      - "./users_service/Dockerfile.prod"
      - "./users_service"

  # # Push the image
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/user-service:$COMMIT_SHA"

  # Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "user-service"
      - "--image"
      - "gcr.io/$PROJECT_ID/user-service:$COMMIT_SHA"
      - "--region"
      - "us-west2"
      - "--platform"
      - "managed"
      - "--port"
      - "8080"
      - "--allow-unauthenticated"
      - "--set-secrets"
      - >-
        MONGODB_URI=MONGODB_URI:latest,
        JWT_SECRET=JWT_SECRET:latest, 
        EMAIL_SERVICE=EMAIL_SERVICE:latest, 
        EMAIL_USERNAME=EMAIL_USERNAME:latest,
        EMAIL_PASSWORD=EMAIL_PASSWORD:latest,
      - "--set-env-vars"
      - >-
        NODE_ENV=production,

  ############################
  # end user service service
  ############################

  ############################
  # gateway service
  ############################
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/gateway-service:$COMMIT_SHA"
      - "-f"
      - "./gateway_service/Dockerfile.prod"
      - "./gateway_service"

  # Push the image
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/gateway-service:$COMMIT_SHA"

  # Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "gateway-service"
      - "--image"
      - "gcr.io/$PROJECT_ID/gateway-service:$COMMIT_SHA"
      - "--region"
      - "us-west2"
      - "--platform"
      - "managed"
      - "--port"
      - "8080"
      - "--allow-unauthenticated"
      - "--set-secrets"
      - >-
        MONGODB_URI=MONGODB_URI:latest,
        JWT_SECRET=JWT_SECRET:latest,
        REDIS_URL=REDIS_URL:latest,
        KAFKA_BROKER_ROUTE=KAFKA_BROKER_ROUTE:latest,
        KAFKA_BROKER_PORT=KAFKA_BROKER_PORT:latest,
        KAFKA_KEY=KAFKA_KEY:latest,
        KAFKA_PASSWORD=KAFKA_PASSWORD:latest
      - "--set-env-vars"
      - >-
        QUESTION_SERVICE_URL=${_QUESTION_SERVICE_URL},
        USER_SERVICE_URL=${_USER_SERVICE_URL},
        MATCHING_SERVICE_URL=${_MATCHING_SERVICE_URL},
        COLLAB_SERVICE_URL=${_COLLAB_SERVICE_URL}

  ############################
  # end gateway service
  ############################

  ############################
  # matching service
  ############################
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/matching-service:$COMMIT_SHA"
      - "-f"
      - "./matching_service/Dockerfile.prod"
      - "./matching_service"

  # Push the image
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/matching-service:$COMMIT_SHA"

  # Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "matching-service"
      - "--image"
      - "gcr.io/$PROJECT_ID/matching-service:$COMMIT_SHA"
      - "--region"
      - "us-west2"
      - "--platform"
      - "managed"
      - "--port"
      - "8080"
      - "--allow-unauthenticated"
      - "--set-secrets"
      - >-
        MONGODB_URI=MONGODB_URI:latest,
        JWT_SECRET=JWT_SECRET:latest,
        REDIS_URL=REDIS_URL:latest,
        KAFKA_BROKER_ROUTE=KAFKA_BROKER_ROUTE:latest,
        KAFKA_BROKER_PORT=KAFKA_BROKER_PORT:latest,
        KAFKA_KEY=KAFKA_KEY:latest,
        KAFKA_PASSWORD=KAFKA_PASSWORD:latest
      - "--set-env-vars"
      - >-
        QUESTION_SERVICE_URL=${_QUESTION_SERVICE_URL},
        USER_SERVICE_URL=${_USER_SERVICE_URL},
        MATCHING_SERVICE_URL=${_MATCHING_SERVICE_URL},
        COLLAB_SERVICE_URL=${_COLLAB_SERVICE_URL}

  ############################
  # end matching service
  ############################

  ############################
  # collab service
  ############################
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/collab-service:$COMMIT_SHA"
      - "-f"
      - "./collab_service/Dockerfile.prod"
      - "./collab_service"

  # Push the image
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/collab-service:$COMMIT_SHA"

  # Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "collab-service"
      - "--image"
      - "gcr.io/$PROJECT_ID/collab-service:$COMMIT_SHA"
      - "--region"
      - "us-west2"
      - "--platform"
      - "managed"
      - "--port"
      - "8080"
      - "--allow-unauthenticated"
      - "--set-secrets"
      - >-
        MONGODB_URI=MONGODB_URI:latest,
        JWT_SECRET=JWT_SECRET:latest,
        REDIS_URL=REDIS_URL:latest,
        KAFKA_BROKER_ROUTE=KAFKA_BROKER_ROUTE:latest,
        KAFKA_BROKER_PORT=KAFKA_BROKER_PORT:latest,
        KAFKA_KEY=KAFKA_KEY:latest,
        KAFKA_PASSWORD=KAFKA_PASSWORD:latest
      - "--set-env-vars"
      - >-
        QUESTION_SERVICE_URL=${_QUESTION_SERVICE_URL},
        USER_SERVICE_URL=${_USER_SERVICE_URL},
        COLLAB_SERVICE_URL=${_COLLAB_SERVICE_URL}
  ############################
  # end collab service
  ############################

  ############################
  # frontend
  ############################
  # Build frontend
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/frontend:$COMMIT_SHA"
      - "-f"
      - "./peerprep_fe/Dockerfile.prod" # Adjust path as needed
      - "--build-arg"
      - "NEXT_PUBLIC_GATEWAY_SERVICE_URL=${_GATEWAY_SERVICE_URL}"
      - "./peerprep_fe"

  # Push the image
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/frontend:$COMMIT_SHA"

  # Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "frontend"
      - "--image"
      - "gcr.io/$PROJECT_ID/frontend:$COMMIT_SHA"
      - "--region"
      - "us-west2"
      - "--platform"
      - "managed"
      - "--port"
      - "3000"
      - "--allow-unauthenticated"
      - "--set-env-vars"
      - >-
        NODE_ENV=production,
        GATEWAY_SERVICE_URL=${_GATEWAY_SERVICE_URL},

  ############################
  # end frontend
  ############################
options:
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _QUESTION_SERVICE_URL: https://question-service-72621048198.us-west2.run.app # This will be set during deployment
  _USER_SERVICE_URL: https://user-service-72621048198.us-west2.run.app # This will be set during deployment
  _MATCHING_SERVICE_URL: https://matching-service-72621048198.us-west2.run.app # This will be set during deployment
  _COLLAB_SERVICE_URL: https://collab-service-72621048198.us-west2.run.app # This will be set during deployment
  _GATEWAY_SERVICE_URL: https://gateway-service-72621048198.us-west2.run.app
  _REGION: us-west2
images:
  - "gcr.io/$PROJECT_ID/question-service:$COMMIT_SHA"
  - "gcr.io/$PROJECT_ID/user-service:$COMMIT_SHA"
  - "gcr.io/$PROJECT_ID/gateway-service:$COMMIT_SHA"
  - "gcr.io/$PROJECT_ID/matching-service:$COMMIT_SHA"
  - "gcr.io/$PROJECT_ID/collab-service:$COMMIT_SHA"
  - "gcr.io/$PROJECT_ID/frontend:$COMMIT_SHA"
